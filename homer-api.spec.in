# Global definitions for SELinux
%global selinux_types %(%{__awk} '/^#[[:space:]]*SELINUXTYPE=/,/^[^#]/ { if ($3 == "-") printf "%s ", $2 }' %{_sysconfdir}/selinux/config 2>/dev/null)
%global selinux_variants %([ -z "%{selinux_types}" ] && echo mls targeted || echo %{selinux_types})

# Definitions
%define debug_package %{nil}
%if %{_vendor} == suse
%define webroot %{_prefix}/srv/sipcapture/htdocs
%else # CentOS/Fedora
%define webroot %{_localstatedir}/www/sipcapture/htdocs
%define webuser apache
%define webgroup apache
%endif
%define DBDIR %{_localstatedir}/sipcapture/mysql

Name:           @PACKAGE_NAME@
Version:        @PACKAGE_VERSION@
Release:        %{BUILD_NUMBER}
Summary:        HTTP based API for HOMER

Group:          Telecommunications
License:        GPLv3
URL:            @PACKAGE_URL@
Source0:        %name-%version.tar.gz

%{?el6:Requires:       initscripts}
%{?el7:Requires:       systemd}
Requires:       util-linux
Requires:       kamailio >= 4.3, kamailio-mysql >= 4.3
Requires:       ntp
Requires:       php >= 5
Requires:       php-mysql
Requires:       perl-DBD-MySQL
Requires:       mysql-community-server >= 5.6
Requires:       mysql-community-client >= 5.6
Requires:       selinux-policy

%description
HTTP based API for HOMER is a robust, carrier-grade, scalable SIP Capture system and Monitoring Application with HEP/HEP2, IP Proto4 (IPIP) encapsulation & port mirroring/monitoring support right out of the box, ready to process & store insane amounts of signaling with instant search, end-to-end analysis and drill-down capabilities for ITSPs, VoIP Providers and Trunk Suppliers using SIP signaling

%package httpd
Requires:       %name = %version
Requires:       httpd
Summary:        httpd config for HTTP based API for HOMER

%description httpd
HOMER API httpd configuration

%package nginx
Requires:       %name = %version
Requires:       nginx, php-fpm
BuildRequires:  selinux-policy-devel
Summary:        nginx config for HTTP based API for HOMER

%description nginx
HOMER API nginx configuration

%package mysql
Requires:       %name = %version
Requires:       mysql-community-server, mysql-community-client
Conflicts:      %name-postgres
Summary:        mysql config for HTTP based API for HOMER

%description mysql
HOMER API mysql configuration

%package postgres
Requires:       %name = %version
Requires:       postgresql-server, postgresql
Conflicts:      %name-mysql
Summary:        Postgres config for HTTP based API for HOMER

%description postgres
HOMER API Postgres configuration

%files
%defattr(0664,%{webuser},%{webgroup},0775)
%dir %{webroot}
%dir %{webroot}/api
%{webroot}/api/*
%{webroot}/apidoc/*
%dir %{DBDIR}
%attr(0664,root,root)%{_sysconfdir}/kamailio/kamailio-sipcapture.cfg
%attr(0664,root,root)%{_sysconfdir}/sysconfig/sipcapture
%{?el6:%attr(0775,root,root)%{_sysconfdir}/init.d/sipcapture}
%{?el7:%attr(0664,root,root)/usr/lib/systemd/system/sipcapture.service}
%attr(0664,root,root)%{_sysconfdir}/rsyslog.d/sipcapture.conf
%attr(0664,root,root)%{_sysconfdir}/logrotate.d/sipcapture

%files httpd
%defattr(0664,root,root,0775)
%attr(0664,%{webuser},%{webuser})%{webroot}/api/.htaccess
%{_sysconfdir}/httpd/conf.d/sipcapture.conf
%{_datadir}/selinux/*/sipcapture-dashboards.pp

%files nginx
%defattr(0664,root,root,0775)
%{_sysconfdir}/nginx/conf.d/sipcapture.conf
%{_sysconfdir}/php-fpm.d/sipcapture.conf
%{_datadir}/selinux/*/nginx.pp
%{_datadir}/selinux/*/php-fpm.pp
%{_datadir}/selinux/*/sipcapture-dashboards.pp

%files mysql
%{?el7:%attr(0664,root,root)%{_sysconfdir}/systemd/system/mysqld.service}
%{_datadir}/sipcapture/sql/mysql/*
%{_sysconfdir}/cron.d/sipcapture_mysql
%{_sysconfdir}/my.cnf.d/sipcapture.cnf
%{_sysconfdir}/systemd/system/mysqld.service
%{_bindir}/homer_mysql_*

%files postgres
%{_datadir}/sipcapture/sql/postgres/*
%{_sysconfdir}/cron.d/sipcapture_pgsql
%{_bindir}/homer_pgsql_*

%prep
%setup -b0 -q

%build
%configure --enable-rpmbuilb
make
for p in nginx php-fpm sipcapture-dashboards; do
    if [ -f examples/web/$p.te ]; then
	(cd examples/web ; make -f /usr/share/selinux/devel/Makefile $p.pp && mv $p.pp $p.pp.targeted;);
    fi;
done

%install
rm -rf $RPM_BUILD_ROOT
make DESTDIR=$RPM_BUILD_ROOT install
# SELinux
for selinuxvariant in %{selinux_variants}
do
	install -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}
	if [ -f examples/web/nginx.pp.${selinuxvariant} ]; then install -p -m 644 examples/web/nginx.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/nginx.pp; fi;
	if [ -f examples/web/php-fpm.pp.${selinuxvariant} ]; then install -p -m 644 examples/web/php-fpm.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/php-fpm.pp; fi;
	if [ -f examples/web/sipcapture-dashboards.pp.${selinuxvariant} ]; then install -p -m 644 examples/web/sipcapture-dashboards.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/sipcapture-dashboards.pp; fi;
done
# Common dirs
install -d %{buildroot}%{_sysconfdir}/cron.d
install -d %{buildroot}%{_sysconfdir}/sysconfig
install -d %{buildroot}%{_bindir}
# Configuration templates
# kamailio configuration
install -d %{buildroot}%{_sysconfdir}/sysconfig
%{?el6:install -d %{buildroot}%{_sysconfdir}/init.d}
%{?el7:install -d %{buildroot}/usr/lib/systemd/system}
install -p -m 644 examples/sipcapture/el%{rhel}/sipcapture.sysconfig %{buildroot}%{_sysconfdir}/sysconfig/sipcapture
%{?el6:install -p -m 644 examples/sipcapture/el%{rhel}/sipcapture.init %{buildroot}%{_sysconfdir}/init.d/sipcapture}
%{?el7:install -p -m 644 examples/sipcapture/el%{rhel}/sipcapture.service %{buildroot}/usr/lib/systemd/system/sipcapture.service}
# HTTP servers confgiuration
install -d %{buildroot}%{_sysconfdir}/httpd/conf.d
install -d %{buildroot}%{_sysconfdir}/nginx/conf.d
install -d %{buildroot}%{_sysconfdir}/php-fpm.d
install -p -m 644 examples/web/homer5.apache %{buildroot}%{_sysconfdir}/httpd/conf.d/sipcapture.conf
install -p -m 644 examples/web/homer5.nginx %{buildroot}%{_sysconfdir}/nginx/conf.d/sipcapture.conf
install -p -m 644 examples/web/homer5.php-fpm %{buildroot}%{_sysconfdir}/php-fpm.d/sipcapture.conf
# MySQL configuration
install -d %{buildroot}%{DBDIR}
install -d %{buildroot}%{_datadir}/sipcapture/sql/mysql
install -p -m 644 sql/mysql/* %{buildroot}%{_datadir}/sipcapture/sql/mysql
install -d %{buildroot}%{_sysconfdir}/my.cnf.d
install -d %{buildroot}%{_sysconfdir}/systemd/system
install -p -m 644 examples/mysql/sipcapture.cnf %{buildroot}%{_sysconfdir}/my.cnf.d/sipcapture.cnf
install -p -m 644 examples/mysql/mysqld.service %{buildroot}%{_sysconfdir}/systemd/system/mysqld.service
install -p -m 644 scripts/mysql/sipcapture.crontab %{buildroot}%{_sysconfdir}/cron.d/sipcapture_mysql
for s in homer_mysql_remove_partitions.pl homer_mysql_rotate.pl homer_mysql_partremove homer_mysql_rotate; do install -p -m 644 scripts/mysql/$s %{buildroot}%{_bindir}/$s; done;
# Postgres configuration
install -d %{buildroot}%{DBDIR}
install -d %{buildroot}%{_datadir}/sipcapture/sql/postgres
install -p -m 644 sql/pgsql/* %{buildroot}%{_datadir}/sipcapture/sql/postgres
#install -d %{buildroot}%{_sysconfdir}/my.cnf.d
#install -d %{buildroot}%{_sysconfdir}/systemd/system
#install -p -m 644 examples/mysql/sipcapture.cnf %{buildroot}%{_sysconfdir}/my.cnf.d/sipcapture.cnf
#install -p -m 644 examples/mysql/mysqld.service %{buildroot}%{_sysconfdir}/systemd/system/mysqld.service
install -p -m 644 scripts/pgsql/sipcapture.crontab %{buildroot}%{_sysconfdir}/cron.d/sipcapture_pgsql
for s in homer_pgsql_rotate.pl homer_pgsql_rotate homer_pgsql_setup_db.sh; do install -p -m 644 scripts/pgsql/$s %{buildroot}%{_bindir}/$s; done;
# UI and API directories and files
install -d %{buildroot}%{webroot}
install -d %{buildroot}%{webroot}/api
%{__cp} -r api/Authentication %{buildroot}%{webroot}/api
%{__cp} -r api/Database %{buildroot}%{webroot}/api
%{__cp} -r api/RestApi %{buildroot}%{webroot}/api
%{__cp} -r api/RestService %{buildroot}%{webroot}/api
%{__cp} -r api/Statistic %{buildroot}%{webroot}/api
%{__cp} -r api/*.php %{buildroot}%{webroot}/api
install -p -m 644 api/.htaccess %{buildroot}%{webroot}/api
%post
# Kamailio stuff
/usr/bin/logger -t "INSTALLER" "=========== Disable native Kamailio server";
if [ -e /sbin/chkconfig ]; then /sbin/chkconfig kamailio off; else /usr/bin/logger -t "INSTALLER" "WARNING: Please, manually diable kamailio service!!!"; fi 2>&1 | /usr/bin/logger -t "INSTALLER"
/usr/bin/logger -t "INSTALLER" "=========== Enable SIPCAPTURE Kamailio server";
if [ -e /bin/systemctl ]; then /bin/systemctl enable sipcapture; else /sbin/chkconfig sipcapture on; fi 2>&1 | /usr/bin/logger -t "INSTALLER"
if [ "$(stat -c %d:%i /)" == "$(stat -c %d:%i /proc/1/root/.)" ]; then
    /usr/bin/logger -t "INSTALLER" "=========== Start SIPCAPTURE Kamailio server";
    %{?el6:/sbin/service sipcapture start}%{?el7:/bin/systemctl start sipcapture} | /usr/bin/logger -t "INSTALLER"
fi

%post httpd
/usr/bin/logger -t "INSTALLER" "=========== Installing SELinux policies"
for selinuxvariant in %{selinux_variants}
do
	/usr/sbin/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/sipcapture-dashboards.pp &> /dev/null || :
done
/sbin/fixfiles -R sipcapture restore || :
/sbin/restorecon -R %{_localstatedir}/cache/sipcapture || :


/usr/bin/logger -t "INSTALLER" "=========== Enable HTTP server";
if [ -e /bin/systemctl ]; then /bin/systemctl enable httpd; else /sbin/chkconfig httpd on; fi
/usr/bin/logger -t "INSTALLER" "Starting local HTTP server"
%{?el6:/sbin/service httpd start}
%{?el7:/bin/systemctl start httpd}

%post nginx
/usr/bin/logger -t "INSTALLER" "=========== Installing SELinux policies"
for selinuxvariant in %{selinux_variants}
do
	/usr/sbin/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/sipcapture-dashboards.pp &> /dev/null || :
	/usr/sbin/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/nginx.pp &> /dev/null || :
	/usr/sbin/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/php-fpm.pp &> /dev/null || :
done
/sbin/fixfiles -R sipcapture restore || :
/sbin/restorecon -R %{_localstatedir}/cache/sipcapture || :

HOSTNAME=`/bin/hostname`
/usr/bin/logger -t "INSTALLER" "=========== Virtual HTTP host set to : $HOSTNAME"
/bin/sed -i "s/<HOSTNAME>/$HOSTNAME/g" %{_sysconfdir}/nginx/conf.d/sipcapture.conf 
/bin/chown -R nginx:nginx %{webroot}
/usr/bin/logger -t "INSTALLER" "=========== Enable HTTP server";
if [ -e /bin/systemctl ]; then /bin/systemctl enable nginx; else /sbin/chkconfig nginx on; fi
if [ -e /bin/systemctl ]; then /bin/systemctl enable php-fpm; else /sbin/chkconfig php-fpm on; fi
/usr/bin/logger -t "INSTALLER" "=========== Starting local HTTP server"
/sbin/service nginx start
/sbin/service php-fpm start

%post mysql
# MySQL stuff
/usr/bin/logger -t "INSTALLER" "=========== Initializing local MySQL server data directory in %{DBDIR}"
#/bin/echo "MYSQLD_OPTS=\"--explicit_defaults_for_timestamp\"" > %{_sysconfdir}/sysconfig/mysql | /usr/bin/logger -t "INSTALLER"
/usr/bin/mysql_install_db --user=mysql --datadir=%{DBDIR} | /usr/bin/logger -t "INSTALLER"
#if [ -e /bin/systemctl ]; then /usr/bin/logger -t "INSTALLER" "=========== Reloading systemd"; /bin/systemctl daemon-reload; fi | /usr/bin/logger -t "INSTALLER"
/usr/bin/logger -t "INSTALLER" "=========== Installing HOMER DB: users and permissions";
(cat %{_datadir}/sipcapture/sql/mysql/homer_user_bootstrap.sql | %{?el7:/usr}/sbin/mysqld --user=mysql --datadir=%{DBDIR} --bootstrap) 2>&1 | /usr/bin/logger -t "INSTALLER";
/usr/bin/logger -t "INSTALLER" "=========== Installing HOMER DB: databases";
(cat %{_datadir}/sipcapture/sql/mysql/homer_databases.sql | %{?el7:/usr}/sbin/mysqld --user=mysql --datadir=%{DBDIR} --bootstrap) 2>&1 | /usr/bin/logger -t "INSTALLER";
for s in configuration data statistic; do ((echo "use homer_$s;" ; cat %{_datadir}/sipcapture/sql/mysql/schema_$s.sql) | %{?el7:/usr}/sbin/mysqld --user=mysql --datadir=%{DBDIR} --bootstrap) 2>&1 | /usr/bin/logger -t "INSTALLER"; done;
/usr/bin/logger -t "INSTALLER" "=========== Enable MySQL server";
if [ -e /bin/systemctl ]; then /bin/systemctl enable mysqld; else /sbin/chkconfig mysqld on; fi | /usr/bin/logger -t "INSTALLER"
if [ "$(stat -c %d:%i /)" == "$(stat -c %d:%i /proc/1/root/.)" ]; then
    /usr/bin/logger -t "INSTALLER" "=========== Starting local MySQL server"
    %{?el6:/sbin/service mysqld start}%{?el7:/bin/systemctl start mysqld} | /usr/bin/logger -t "INSTALLER"
fi

%postun nginx
if [ $1 -eq 0 ] ; then
  /usr/bin/logger -t "INSTALLER" "=========== Installing SELinux policies"
  for selinuxvariant in %{selinux_variants}
  do
    /usr/sbin/semodule -s ${selinuxvariant} -r mymodule &> /dev/null || :
  done
  /sbin/fixfiles -R sipcapture| :
  [ -d %{_localstatedir}/cache/sipcapture ]
    /sbin/restorecon -R %{_localstatedir}/cache/sipcapture &> /dev/null || :
fi

%postun httpd
if [ $1 -eq 0 ] ; then
  /usr/bin/logger -t "INSTALLER" "=========== Installing SELinux policies"
  for selinuxvariant in %{selinux_variants}
  do
    /usr/sbin/semodule -s ${selinuxvariant} -r mymodule &> /dev/null || :
  done
  /sbin/fixfiles -R sipcapture| :
  [ -d %{_localstatedir}/cache/sipcapture ]
    /sbin/restorecon -R %{_localstatedir}/cache/sipcapture &> /dev/null || :
fi

%preun

%postun

%clean
rm -rf $RPM_BUILD_ROOT
